{"version":3,"file":"static/js/178.6d001dae.chunk.js","mappings":"4OAGAA,EAAAA,EAAAA,SAAAA,QAAyB,wCAEzB,IAAMC,EAAgB,SAAAC,GACpBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDE,EACzD,EAMYC,GAAWC,EAAAA,EAAAA,IACtB,gBADsC,mCAEtC,WAAOC,EAAaC,GAApB,gGAEuBN,EAAAA,EAAAA,KAAW,gBAAiBK,GAFnD,cAEUE,EAFV,OAGIN,EAAcM,EAAKC,KAAKN,OAH5B,kBAIWK,EAAKC,MAJhB,yDAMWF,EAASG,gBAAgB,KAAMC,UAN1C,yDAFsC,yD,IAanBN,EAAAA,EAAAA,IACnB,aADmC,mCAEnC,WAAOC,EAAaC,GAApB,gGAEuBN,EAAAA,EAAAA,KAAW,eAAgBK,GAFlD,cAEUE,EAFV,OAGIN,EAAcM,EAAKC,KAAKN,OAH5B,kBAIWK,EAAKC,MAJhB,yDAMWF,EAASG,gBAAgB,KAAMC,UAN1C,yDAFmC,0DAafN,EAAAA,EAAAA,IAAiB,cAAD,mCAAgB,WAAOO,EAAGL,GAAV,gGAE/BN,EAAAA,EAAAA,KAAW,iBAFoB,cAE5CO,EAF4C,OA7BpDP,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,GA6BM,kBAI3CO,EAAKC,MAJsC,yDAM3CF,EAASG,gBAAgB,KAAMC,UANY,yDAAhB,yD,QCpC/B,SAASE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,SAda,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBN,EACEV,EAAS,CACPiB,KAAMF,EAAKG,SAASD,KAAKE,MACzBC,MAAOL,EAAKG,SAASE,MAAMD,MAC3BE,SAAUN,EAAKG,SAASG,SAASF,SAGrCJ,EAAKO,OACN,EAG+BC,aAAa,MAA3C,WACE,6BAAO,YAEL,kBAAOC,KAAK,OAAOP,KAAK,aAE1B,6BAAO,SAEL,kBAAOO,KAAK,QAAQP,KAAK,cAE3B,6BAAO,YAEL,kBAAOO,KAAK,WAAWP,KAAK,iBAE9B,mBAAQO,KAAK,SAAb,SAAsB,eAG3B,CClCD,IAMA,EANiB,WACf,OACE,SAACf,EAAD,GAEH,C","sources":["redux/Auth/authOperations.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const resp = await axios.post('/users/signup', credentials);\n      setAuthHeader(resp.data.token);\n      return resp.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const resp = await axios.post('/users/login', credentials);\n      setAuthHeader(resp.data.token);\n      return resp.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    const resp = await axios.post('/users/logout');\n    clearAuthHeader();\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// export const refreshUser = createAsyncThunk(\n//   'auth/refresh',\n//     async (_, thunkAPI) => {\n    \n//         try {\n//             setAuthHeader();\n//       const resp = await axios.get('/users/current');\n//       return resp.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/Auth/authOperations';\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n}\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nconst Register = () => {\n  return (\n    <RegisterForm/>\n  );\n};\n\nexport default Register;\n"],"names":["axios","setAuthHeader","token","register","createAsyncThunk","credentials","thunkAPI","resp","data","rejectWithValue","message","_","RegisterForm","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","email","password","reset","autoComplete","type"],"sourceRoot":""}